@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/Shared.cshtml";

}

<script src="~/Areas/Admin/css/js/functionController.js"></script>
<!-- Page Wrapper -->
<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Tables</h1>
    <p class="mb-4">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target="_blank" href="https://datatables.net">official DataTables documentation</a>.</p>
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">

                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Username</th>
                            <th>Tên</th>
                            <th>email</th>
                            <th>Địa chỉ</th>
                            <th>Điện thoại</th>
                            <th>Ngày tạo</th>
                            <th>Ngày cập nhật</th>
                            <th>Kích hoạt</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ if (ViewBag.lstUserBC.Count > 0)
                            {
                                foreach (var item in ViewBag.lstUserBC)
                                {
                                    <tr>
                                        <th>
                                            <a href="UserBCDetailsProduct?username=@item.username">
                                                @item.username
                                            </a>
                                        </th>
                                        <th>@item.name</th>
                                        <th>@item.email</th>
                                        <th>@item.adrs</th>
                                        <th>@item.phone</th>
                                        <th>@item.dateCreated.ToString("dd/MM/yyyy")</th>
                                        <th>
                                            @if (item.dateUpdate != null)
                                            {
                                                item.dateUpdate.ToString("dd/MM/yyyy");
                                            }
                                            else { }
                                        </th>
                                        <th>
                                            <button id="btn-@item.username" class="btn @(item.active == 1 ? "btn-success" : "btn-danger") " onclick="activeUser('@item.username',@item.active)">
                                                @(item.active == 1 ? "Đã kích hoạt" : "Kích hoạt")
                                            </button>
                                        </th>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <th> </th>
                                    <th> </th>
                                    <th> </th>
                                    <th> </th>
                                    <th> </th>
                                    <th> </th>
                                    <th> </th>
                                    <th> </th>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script type="text/javascript">

        function myFunction() {
            alert("hahha");
            //document.getElementById("demo").innerHTML = "Hello World";
        }
        function clickMe() {
            var a = '123';// document.getElementById("Address").value;
            var b = '123';//document.getElementById("telephone").value;
            var c = '123';//document.getElementById("Mobilephone").value;
            var d = '123';//document.getElementById("birthDate").value;
            // BigchainDB server instance (e.g. https://example.com/api/v1/)
            const API_PATH = 'https://test.ipdb.io/api/v1/'

            // Create a new keypair.
            const alice = new BigchainDB.Ed25519Keypair()

            // Construct a transaction payload
            const tx = BigchainDB.Transaction.makeCreateTransaction(
                // Define the asset to store, in this example it is the current temperature
                // (in Celsius) for the city of Berlin.
                { ID: "KT1", name: a, telphone: b, datetime: d },

                // Metadata contains information about the transaction itself
                // (can be `null` if not needed)
                { what: 'My first BigchainDB transaction' },

                // A transaction needs an output
                [BigchainDB.Transaction.makeOutput(
                    BigchainDB.Transaction.makeEd25519Condition(alice.publicKey))
                ],
                alice.publicKey
            )

            // Sign the transaction with private keys
            const txSigned = BigchainDB.Transaction.signTransaction(tx, alice.privateKey)

            // Send the transaction off to BigchainDB
            let conn = new BigchainDB.Connection(API_PATH)

            conn.postTransactionCommit(txSigned)
                .then(res => {
                    const elem = document.getElementById('lastTransaction')
                    elem.href = API_PATH + 'transactions/' + txSigned.id
                    elem.innerText = txSigned.id
                    console.log('Transaction', txSigned.id, 'accepted')
                });
        }
    </script>
</div>
