
@{
    ViewBag.Title = "UserBCDetailsProduct";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<script src="https://unpkg.com/bigchaindb-driver@4.0.0/dist/browser/bigchaindb-driver.window.min.js"></script>
<script src="~/Areas/Admin/css/js/functionController.js"></script>

<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Thông tin</h1>
    @*<p class="mb-4">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target="_blank" href="https://datatables.net">official DataTables documentation</a>.</p>*@
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h3 class="m-0 font-weight-bold text-primary">@ViewBag.userInfo.name</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">

                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Mã sản phẩm</th>
                            <th>Tên sản phẩm</th>
                            <th>Chi tiết</th>
                            @if (ViewBag.Roles == 1)
                            {
                                <th>Ngày trồng</th>
                                <th>Ngày thu hoạch</th>
                            }
                            else if (ViewBag.Roles == 2)
                            {
                                <th>Ngày nhận</th>
                                <th>Ngày chuyển xong</th>
                            }
                            else
                            {
                                <th>Ngày mua</th>
                                <th>Ngày nhận</th>
                            }
                            <th>Trạng thái</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ if (ViewBag.lstProduct.Count > 0)
                            {
                                foreach (var item in ViewBag.lstProduct)
                                {
                                    <tr>
                                        <td><a href="@Url.Action("ProductPlanting")?IdProduct=@item.idProduct">@item.idProduct</a></td>
                                        <td>@item.nameProduct</td>
                                        <td>@item.details</td>
                                        <td>@item.dateCreated.ToString("dd/MM/yyyy")</td>
                                        @if (@item.dateReview != null)
                                        {
                                            <td>@item.dateReview.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                @if (item.IsUpBD == 0)
                                                {
                                                    <button id="id-@item.idProductDetail" class="btn btn-success"
                                                            onclick="sendToBigchainDB('@item.idProduct','@item.nameProduct','@item.idUser', '@item.nameOfUser','@item.email','@item.adrs','@item.userArea','@item.userCity','@item.phone','@item.idRole',
                                                    '@item.dateCreated.ToString("dd/MM/yyyy")','@item.dateReview.ToString("dd/MM/yyyy")','@item.idProductDetail','@item.imgPath')">
                                                        Đưa lên block chain
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-danger"> Đã đưa lên block chain</button>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                        }
                                        @*<td><button class="btn btn-dark" onclick="generateQRCode('@item.idProduct')">Xem mã QR</button></td>*@
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        function sendToBigchainDB(idProduct, nameProduct, idUser, nameOfUser, email, adrs, area, city, phone, idRole, dateBegin, dateEnd, idProductDetail, company, imgPath) {
            disableButton(idProductDetail, true);

            // BigchainDB server instance (e.g. https://example.com/api/v1/)
            const API_PATH = '@System.Web.Configuration.WebConfigurationManager.AppSettings["linkBD"]'

            // Create a new keypair.
            const alice = new BigchainDB.Ed25519Keypair()

            // Construct a transaction payload
            const tx = BigchainDB.Transaction.makeCreateTransaction(
                // Define the asset to store, in this example it is the current temperature
                // (in Celsius) for the city of Berlin.
                {
                    idProduct: idProduct, nameProduct: nameProduct, idUser: idUser,
                    nameOfUser: nameOfUser, email: email, adrs: adrs, area: area, city: city, phone: phone, idRole: idRole,
                    dateBegin: dateBegin, dateEnd: dateEnd, company: company, imgPath: imgPath
                },

                // Metadata contains information about the transaction itself
                // (can be `null` if not needed)
                { maker: 'CTK40' },

                // A transaction needs an output
                [BigchainDB.Transaction.makeOutput(
                    BigchainDB.Transaction.makeEd25519Condition(alice.publicKey))
                ],
                alice.publicKey
            )

            // Sign the transaction with private keys
            const txSigned = BigchainDB.Transaction.signTransaction(tx, alice.privateKey)

            // Send the transaction off to BigchainDB
            let conn = new BigchainDB.Connection(API_PATH)

            conn.postTransactionCommit(txSigned)
                .then(res => {
                    console.log(res);
                    //const elem = document.getElementById('lastTransaction');
                    //elem.href = API_PATH + 'transactions/' + txSigned.id;
                    //elem.innerText = txSigned.id;
                    //console.log('Transaction', txSigned.id, 'accepted');
                    if (res != null) {
                        isUpBD(idProductDetail, 'UserAD/UpBD');
                    }
                });
        }

    </script>
</div>